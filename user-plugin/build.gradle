plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.3.8"
    id("io.micronaut.aot") version "4.3.8"
}

version = "0.1.3"
group = "coop.stlma.tech.protocolsn"

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    //web
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    testImplementation("io.micronaut:micronaut-http-client")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut.validation:micronaut-validation")

    //client
    implementation("io.micronaut.views:micronaut-views-fieldset")
    implementation("io.micronaut.views:micronaut-views-thymeleaf")

    //protocol-sn
    implementation("coop.stlma.tech.protocolsn:keycloak-api:0.1.0")
    implementation("coop.stlma.tech.protocolsn:plugin-lib:0.1.3")
    implementation project(':user-plugin-api')

    //serde
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut.serde:micronaut-serde-jackson")

    //reactor
    implementation("io.micronaut.reactor:micronaut-reactor")

    //web
    compileOnly("io.micronaut:micronaut-http-client")
    annotationProcessor("io.micronaut:micronaut-http-validation")

    //logging
    runtimeOnly("ch.qos.logback:logback-classic")

    //properties
    runtimeOnly("org.yaml:snakeyaml")

    //security
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    implementation("io.micronaut.security:micronaut-security-oauth2")
    implementation("io.micronaut.security:micronaut-security-jwt")

    //testing
    testImplementation("io.micronaut:micronaut-http-client")
    implementation("coop.stlma.tech.protocolsn:plugin-lib-api:0.1.0")
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("io.micronaut.test:micronaut-test-junit5")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
    testImplementation("org.junit.jupiter:junit-jupiter-engine")
    testAnnotationProcessor("io.micronaut:micronaut-inject-java")
    testImplementation("org.mockito:mockito-core")
}


application {
    mainClass = "coop.stlma.tech.protocolsn.Application"
}
java {
    sourceCompatibility = JavaVersion.toVersion("21")
    targetCompatibility = JavaVersion.toVersion("21")
}


graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("coop.stlma.tech.protocolsn.*")
    }
    aot {
    // Please review carefully the optimizations enabled below
    // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
        replaceLogbackXml = true
    }
}


tasks.named("dockerfileNative") {
    jdkVersion = "21"
}


